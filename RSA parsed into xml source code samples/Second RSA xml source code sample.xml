<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root type='CompilationUnit'><imports><import type='ImportDeclaration' isAsterisk='false' isStatic='false'><name type='Name' identifier='DataInputStream'><qualifier type='Name' identifier='io'><qualifier type='Name' identifier='java'></qualifier></qualifier></name></import><import type='ImportDeclaration' isAsterisk='false' isStatic='false'><name type='Name' identifier='IOException'><qualifier type='Name' identifier='io'><qualifier type='Name' identifier='java'></qualifier></qualifier></name></import><import type='ImportDeclaration' isAsterisk='false' isStatic='false'><name type='Name' identifier='BigInteger'><qualifier type='Name' identifier='math'><qualifier type='Name' identifier='java'></qualifier></qualifier></name></import><import type='ImportDeclaration' isAsterisk='false' isStatic='false'><name type='Name' identifier='Random'><qualifier type='Name' identifier='util'><qualifier type='Name' identifier='java'></qualifier></qualifier></name></import></imports><types><type type='ClassOrInterfaceDeclaration' isInterface='false'><name type='SimpleName' identifier='RSA'></name><members><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='PRIVATE'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='p'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='BigInteger'></name></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='PRIVATE'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='q'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='BigInteger'></name></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='PRIVATE'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='N'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='BigInteger'></name></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='PRIVATE'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='phi'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='BigInteger'></name></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='PRIVATE'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='e'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='BigInteger'></name></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='PRIVATE'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='d'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='BigInteger'></name></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='PRIVATE'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='1024'></initializer><name type='SimpleName' identifier='bitlength'></name><type type='PrimitiveType' identifier='INT'></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='PRIVATE'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='r'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Random'></name></type></variable></variables></member><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='r'></name></target><value type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Random'></name></type></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='p'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='probablePrime'></name><scope type='NameExpr'><name type='SimpleName' identifier='BigInteger'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='bitlength'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='r'></name></argument></arguments></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='q'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='probablePrime'></name><scope type='NameExpr'><name type='SimpleName' identifier='BigInteger'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='bitlength'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='r'></name></argument></arguments></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='N'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='multiply'></name><scope type='NameExpr'><name type='SimpleName' identifier='p'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='q'></name></argument></arguments></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='phi'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='multiply'></name><scope type='MethodCallExpr'><name type='SimpleName' identifier='subtract'></name><scope type='NameExpr'><name type='SimpleName' identifier='p'></name></scope><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='ONE'></name><scope type='NameExpr'><name type='SimpleName' identifier='BigInteger'></name></scope></argument></arguments></scope><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='subtract'></name><scope type='NameExpr'><name type='SimpleName' identifier='q'></name></scope><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='ONE'></name><scope type='NameExpr'><name type='SimpleName' identifier='BigInteger'></name></scope></argument></arguments></argument></arguments></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='e'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='probablePrime'></name><scope type='NameExpr'><name type='SimpleName' identifier='BigInteger'></name></scope><arguments><argument type='BinaryExpr' operator='DIVIDE'><left type='NameExpr'><name type='SimpleName' identifier='bitlength'></name></left><right type='IntegerLiteralExpr' value='2'></right></argument><argument type='NameExpr'><name type='SimpleName' identifier='r'></name></argument></arguments></value></expression></statement><statement type='WhileStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='add'></name><scope type='NameExpr'><name type='SimpleName' identifier='e'></name></scope><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='ONE'></name><scope type='NameExpr'><name type='SimpleName' identifier='BigInteger'></name></scope></argument></arguments></expression></statement></statements></body><condition type='BinaryExpr' operator='AND'><left type='BinaryExpr' operator='GREATER'><left type='MethodCallExpr'><name type='SimpleName' identifier='compareTo'></name><scope type='MethodCallExpr'><name type='SimpleName' identifier='gcd'></name><scope type='NameExpr'><name type='SimpleName' identifier='phi'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='e'></name></argument></arguments></scope><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='ONE'></name><scope type='NameExpr'><name type='SimpleName' identifier='BigInteger'></name></scope></argument></arguments></left><right type='IntegerLiteralExpr' value='0'></right></left><right type='BinaryExpr' operator='LESS'><left type='MethodCallExpr'><name type='SimpleName' identifier='compareTo'></name><scope type='NameExpr'><name type='SimpleName' identifier='e'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='phi'></name></argument></arguments></left><right type='IntegerLiteralExpr' value='0'></right></right></condition></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='d'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='modInverse'></name><scope type='NameExpr'><name type='SimpleName' identifier='e'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='phi'></name></argument></arguments></value></expression></statement></statements></body><name type='SimpleName' identifier='RSA'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='e'></name><scope type='ThisExpr'></scope></target><value type='NameExpr'><name type='SimpleName' identifier='e'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='d'></name><scope type='ThisExpr'></scope></target><value type='NameExpr'><name type='SimpleName' identifier='d'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='N'></name><scope type='ThisExpr'></scope></target><value type='NameExpr'><name type='SimpleName' identifier='N'></name></value></expression></statement></statements></body><name type='SimpleName' identifier='RSA'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='e'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='BigInteger'></name></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='d'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='BigInteger'></name></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='N'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='BigInteger'></name></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='RSA'></name></type></initializer><name type='SimpleName' identifier='rsa'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='RSA'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='DataInputStream'></name></type><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='in'></name><scope type='NameExpr'><name type='SimpleName' identifier='System'></name></scope></argument></arguments></initializer><name type='SimpleName' identifier='in'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='DataInputStream'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='teststring'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='println'></name><scope type='FieldAccessExpr'><name type='SimpleName' identifier='out'></name><scope type='NameExpr'><name type='SimpleName' identifier='System'></name></scope></scope><arguments><argument type='StringLiteralExpr' value='Enter the plain text:'></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='teststring'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='readLine'></name><scope type='NameExpr'><name type='SimpleName' identifier='in'></name></scope></value></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='println'></name><scope type='FieldAccessExpr'><name type='SimpleName' identifier='out'></name><scope type='NameExpr'><name type='SimpleName' identifier='System'></name></scope></scope><arguments><argument type='BinaryExpr' operator='PLUS'><left type='StringLiteralExpr' value='Encrypting String: '></left><right type='NameExpr'><name type='SimpleName' identifier='teststring'></name></right></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='println'></name><scope type='FieldAccessExpr'><name type='SimpleName' identifier='out'></name><scope type='NameExpr'><name type='SimpleName' identifier='System'></name></scope></scope><arguments><argument type='BinaryExpr' operator='PLUS'><left type='StringLiteralExpr' value='String in Bytes: '></left><right type='MethodCallExpr'><name type='SimpleName' identifier='bytesToString'></name><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='getBytes'></name><scope type='NameExpr'><name type='SimpleName' identifier='teststring'></name></scope></argument></arguments></right></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='encrypt'></name><scope type='NameExpr'><name type='SimpleName' identifier='rsa'></name></scope><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='getBytes'></name><scope type='NameExpr'><name type='SimpleName' identifier='teststring'></name></scope></argument></arguments></initializer><name type='SimpleName' identifier='encrypted'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' identifier='BYTE'></componentType></type></variable></variables></expression><comment type='LineComment' content=' encrypt'></comment></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='decrypt'></name><scope type='NameExpr'><name type='SimpleName' identifier='rsa'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='encrypted'></name></argument></arguments></initializer><name type='SimpleName' identifier='decrypted'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' identifier='BYTE'></componentType></type></variable></variables></expression><comment type='LineComment' content=' decrypt'></comment></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='println'></name><scope type='FieldAccessExpr'><name type='SimpleName' identifier='out'></name><scope type='NameExpr'><name type='SimpleName' identifier='System'></name></scope></scope><arguments><argument type='BinaryExpr' operator='PLUS'><left type='StringLiteralExpr' value='Decrypting Bytes: '></left><right type='MethodCallExpr'><name type='SimpleName' identifier='bytesToString'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='decrypted'></name></argument></arguments></right></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='println'></name><scope type='FieldAccessExpr'><name type='SimpleName' identifier='out'></name><scope type='NameExpr'><name type='SimpleName' identifier='System'></name></scope></scope><arguments><argument type='BinaryExpr' operator='PLUS'><left type='StringLiteralExpr' value='Decrypted String: '></left><right type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type><arguments><argument type='NameExpr'><name type='SimpleName' identifier='decrypted'></name></argument></arguments></right></argument></arguments></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='main'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier><modifier type='Modifier' keyword='STATIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='args'></name><type type='ArrayType' origin='TYPE'><componentType type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></componentType></type></parameter></parameters><thrownExceptions><thrownException type='ClassOrInterfaceType'><name type='SimpleName' identifier='IOException'></name></thrownException></thrownExceptions><annotations><annotation type='SingleMemberAnnotationExpr'><memberValue type='StringLiteralExpr' value='deprecation'></memberValue><name type='Name' identifier='SuppressWarnings'></name></annotation></annotations></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='StringLiteralExpr' value=''></initializer><name type='SimpleName' identifier='test'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type></variable></variables></expression></statement><statement type='ForEachStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='PLUS'><target type='NameExpr'><name type='SimpleName' identifier='test'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='toString'></name><scope type='NameExpr'><name type='SimpleName' identifier='Byte'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='b'></name></argument></arguments></value></expression></statement></statements></body><iterable type='NameExpr'><name type='SimpleName' identifier='encrypted'></name></iterable><variable type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='b'></name><type type='PrimitiveType' identifier='BYTE'></type></variable></variables></variable></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='test'></name></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type><name type='SimpleName' identifier='bytesToString'></name><modifiers><modifier type='Modifier' keyword='PRIVATE'></modifier><modifier type='Modifier' keyword='STATIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='encrypted'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' identifier='BYTE'></componentType></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='toByteArray'></name><scope type='MethodCallExpr'><name type='SimpleName' identifier='modPow'></name><scope type='EnclosedExpr'><inner type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='BigInteger'></name></type><arguments><argument type='NameExpr'><name type='SimpleName' identifier='message'></name></argument></arguments></inner></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='e'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='N'></name></argument></arguments></scope></expression></statement></statements></body><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' identifier='BYTE'></componentType></type><name type='SimpleName' identifier='encrypt'></name><comment type='LineComment' content=' Encrypt message'></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='message'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' identifier='BYTE'></componentType></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='toByteArray'></name><scope type='MethodCallExpr'><name type='SimpleName' identifier='modPow'></name><scope type='EnclosedExpr'><inner type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='BigInteger'></name></type><arguments><argument type='NameExpr'><name type='SimpleName' identifier='message'></name></argument></arguments></inner></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='d'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='N'></name></argument></arguments></scope></expression></statement></statements></body><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' identifier='BYTE'></componentType></type><name type='SimpleName' identifier='decrypt'></name><comment type='LineComment' content=' Decrypt message'></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='message'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' identifier='BYTE'></componentType></type></parameter></parameters></member></members><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></type></types></root>